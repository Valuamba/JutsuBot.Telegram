// <auto-generated />
using System;
using Htlv.Parser.DataAccess.EF;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Htlv.Parser.Migrations
{
    [DbContext(typeof(BotDbContext))]
    [Migration("20211124211715_Nullable")]
    partial class Nullable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Htlv.Parser.DataAccess.EF.Entities.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CacheData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentStateUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<long?>("MessageStateUserId")
                        .HasColumnType("bigint");

                    b.Property<long?>("PrevStateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("Step")
                        .HasColumnType("bigint");

                    b.HasKey("StateId");

                    b.HasIndex("CurrentStateUserId")
                        .IsUnique()
                        .HasFilter("[CurrentStateUserId] IS NOT NULL");

                    b.HasIndex("MessageStateUserId");

                    b.HasIndex("PrevStateUserId")
                        .IsUnique()
                        .HasFilter("[PrevStateUserId] IS NOT NULL");

                    b.ToTable("States");
                });

            modelBuilder.Entity("Htlv.Parser.DataAccess.EF.Entities.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBotStopped")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Htlv.Parser.Models.CSGOMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstTeam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchEvent")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatchMeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("MatchTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecondTeam")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CSGOMatches");
                });

            modelBuilder.Entity("Htlv.Parser.DataAccess.EF.Entities.State", b =>
                {
                    b.HasOne("Htlv.Parser.DataAccess.EF.Entities.User", "UserForCurrentState")
                        .WithOne("CurrentState")
                        .HasForeignKey("Htlv.Parser.DataAccess.EF.Entities.State", "CurrentStateUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Htlv.Parser.DataAccess.EF.Entities.User", "UserForMessageState")
                        .WithMany("MessageState")
                        .HasForeignKey("MessageStateUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("Htlv.Parser.DataAccess.EF.Entities.User", "UserForPrevState")
                        .WithOne("PrevState")
                        .HasForeignKey("Htlv.Parser.DataAccess.EF.Entities.State", "PrevStateUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("UserForCurrentState");

                    b.Navigation("UserForMessageState");

                    b.Navigation("UserForPrevState");
                });

            modelBuilder.Entity("Htlv.Parser.DataAccess.EF.Entities.User", b =>
                {
                    b.Navigation("CurrentState");

                    b.Navigation("MessageState");

                    b.Navigation("PrevState");
                });
#pragma warning restore 612, 618
        }
    }
}
