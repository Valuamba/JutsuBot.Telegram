// <auto-generated />
using System;
using JutsuBot.Elements.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsoleApp1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211210170314_Add_Age")]
    partial class Add_Age
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CliverBot.Console.DataAccess.Entities.FormPropertyMetadata", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AddPropertyCommandAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AddPropertyValueTextAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangePropertyCommandAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangePropertyTextAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FormId")
                        .HasColumnType("int");

                    b.Property<string>("PlaceholderAlias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PropertyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropertyStatus")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FormId");

                    b.ToTable("FormProperties");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.Entities.MessageLocalization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Alias")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Text")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LocalizationMessages");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.FormModel", b =>
                {
                    b.Property<int>("FormId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FormCacheModel")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FormName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FormId");

                    b.ToTable("Forms");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CacheData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("CurrentStateUserId")
                        .HasColumnType("bigint");

                    b.Property<int?>("MessageId")
                        .HasColumnType("int");

                    b.Property<long?>("MessageStateUserId")
                        .HasColumnType("bigint");

                    b.Property<string>("Stage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatePriority")
                        .HasColumnType("int");

                    b.Property<long?>("Step")
                        .HasColumnType("bigint");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("StateId");

                    b.HasIndex("CurrentStateUserId")
                        .IsUnique()
                        .HasFilter("[CurrentStateUserId] IS NOT NULL");

                    b.HasIndex("MessageStateUserId");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.ToTable("States");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.TrackedMessage", b =>
                {
                    b.Property<int>("MessageId")
                        .HasColumnType("int");

                    b.Property<long>("ChatId")
                        .HasColumnType("bigint");

                    b.Property<int?>("InformationMessageFormId")
                        .HasColumnType("int");

                    b.Property<string>("MessageText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MessageType")
                        .HasColumnType("int");

                    b.Property<int?>("StateId")
                        .HasColumnType("int");

                    b.Property<int?>("UtilityMessageFormId")
                        .HasColumnType("int");

                    b.HasKey("MessageId");

                    b.HasIndex("InformationMessageFormId")
                        .IsUnique()
                        .HasFilter("[InformationMessageFormId] IS NOT NULL");

                    b.HasIndex("StateId")
                        .IsUnique()
                        .HasFilter("[StateId] IS NOT NULL");

                    b.HasIndex("UtilityMessageFormId");

                    b.ToTable("TrackedMessages");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.User", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int?>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAuthorized")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBotStopped")
                        .HasColumnType("bit");

                    b.Property<string>("LanguageCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.Entities.FormPropertyMetadata", b =>
                {
                    b.HasOne("CliverBot.Console.DataAccess.FormModel", "Form")
                        .WithMany("FormProperties")
                        .HasForeignKey("FormId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Form");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.State", b =>
                {
                    b.HasOne("CliverBot.Console.DataAccess.User", "UserForCurrentState")
                        .WithOne("CurrentState")
                        .HasForeignKey("CliverBot.Console.DataAccess.State", "CurrentStateUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CliverBot.Console.DataAccess.User", "MessageStateUser")
                        .WithMany("MessageState")
                        .HasForeignKey("MessageStateUserId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CliverBot.Console.DataAccess.User", null)
                        .WithOne("PrevState")
                        .HasForeignKey("CliverBot.Console.DataAccess.State", "UserId");

                    b.Navigation("MessageStateUser");

                    b.Navigation("UserForCurrentState");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.TrackedMessage", b =>
                {
                    b.HasOne("CliverBot.Console.DataAccess.FormModel", "InformationMessageForm")
                        .WithOne("FormInformationMessage")
                        .HasForeignKey("CliverBot.Console.DataAccess.TrackedMessage", "InformationMessageFormId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CliverBot.Console.DataAccess.State", "State")
                        .WithOne("Message")
                        .HasForeignKey("CliverBot.Console.DataAccess.TrackedMessage", "StateId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("CliverBot.Console.DataAccess.FormModel", "UtilityMessageForm")
                        .WithMany("FormUtilityMessages")
                        .HasForeignKey("UtilityMessageFormId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("InformationMessageForm");

                    b.Navigation("State");

                    b.Navigation("UtilityMessageForm");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.FormModel", b =>
                {
                    b.Navigation("FormInformationMessage");

                    b.Navigation("FormProperties");

                    b.Navigation("FormUtilityMessages");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.State", b =>
                {
                    b.Navigation("Message");
                });

            modelBuilder.Entity("CliverBot.Console.DataAccess.User", b =>
                {
                    b.Navigation("CurrentState");

                    b.Navigation("MessageState");

                    b.Navigation("PrevState");
                });
#pragma warning restore 612, 618
        }
    }
}
